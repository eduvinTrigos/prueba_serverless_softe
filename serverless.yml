service: aws-nodeJs
frameworkVersion: '3'
useDotenv: true
package:
  individually: false
provider:
  name: aws
  stage: demo # production | development | demo
  region: us-west-2
  runtime: nodejs12.x
  timeout: 30
  environment:
    NODE_ENV: ${opt:stage, 'development'} # production | development | demo
  httpApi:
    cors: true
plugins:
  - serverless-offline
  - serverless-prune-plugin
custom:
  credentials: ${file(./config/credentials.json)}
  prune:
    automatic: true
    number: 3
  serverless-offline:
    httpPort: 4000
    websocketPort: 4001
    lambdaPort: 4002
functions:
  swapi:
    handler: handler/swapi_handler.swapis
    events:
      - httpApi:
          path: /{type_data}/{id_data}
          method: GET
      - httpApi:
          path: /{type_data}
          method: GET
          request:
            parameters:
              querystrings:
                page: true
  personaje:
    handler: handler/personaje_handler.list
    events:
      - httpApi:
          path: /personajes
          method: GET
  personaje_view:
    handler: handler/personaje_handler.view
    events:
      - httpApi:
          path: /personajes/{id_personaje}/details
          method: GET
  personaje_create:
    handler: handler/personaje_handler.create
    events:
      - httpApi:
          path: /personajes/create
          method: POST
  personaje_update:
    handler: handler/personaje_handler.update
    events:
      - httpApi:
          path: /personajes/update/{id_personaje}
          method: PUT
  personaje_delete:
    handler: handler/personaje_handler.delete
    events:          
      - httpApi:
          path: /personajes/delete/{id_personaje}
          method: DELETE
      